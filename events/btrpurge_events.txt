
namespace = btrpurge

event = {
	id = btrpurge.1337

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		set_timed_global_flag = {
			flag = btrpurge_enabled
			days = 30
		}
	}
}

event = {
	id = btrpurge.1

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_crisis = yes
		NOT = { has_global_flag = btrpurge.1.stop }
	}

	immediate = {
		set_timed_global_flag = {
			flag = btrpurge.1.stop
			days = 10
		}

		every_country = {
			limit = {
				NOT = { has_modifier = btrpurge_crisis }
				OR = {
					is_country_type = swarm
					is_country_type = extradimensional
					is_country_type = extradimensional_2
					is_country_type = extradimensional_3
					is_country_type = ai_empire
				}
			}
			add_modifier = { modifier = btrpurge_crisis }
		}
		every_planet = {
			limit = {
				exists = controller
			}
			if = {
				limit = {
					controller = { has_modifier = btrpurge_crisis }
					NOT = { has_modifier = btrpurge_crisis_purge }
				}
				add_modifier = { modifier = btrpurge_crisis_purge }
			}
			else_if = {
				limit = {
					NOT = { controller = { has_modifier = btrpurge_crisis } }
					has_modifier = btrpurge_crisis_purge
				}
				remove_modifier = btrpurge_crisis_purge
			}
		}
	}
}

planet_event = {
	id = btrpurge.2

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		set_variable = {
			which = btrpurge_planet_pops
			value = 0
		}
		set_variable = {
			which = btrpurge_planet_purged_pops
			value = 0
		}
		fromfrom = {
			pop_event = { id = btrpurge.5 days = 0 }
		}
		every_owned_pop = {
			if = {
				limit = {
					is_being_purged = no
				}
				prev = {
					change_variable = {
						which = btrpurge_planet_pops
						value = 0.1
					}
					# log ="btrpurge_planet_pops = [this.btrpurge_planet_pops]"
				}
			}
			else_if = {
				limit = {
					is_being_purged = yes
				}
				prev = {
					change_variable = {
						which = btrpurge_planet_purged_pops
						value = 0.1
					}
					# log ="btrpurge_planet_purged_pops = [this.btrpurge_planet_purged_pops]"
				}
			}
		}
		while = {
			limit = {
				check_variable = {
					which = btrpurge_planet_pops
					value > 1
				}
			}
			# log ="while; btrpurge_planet_pops = [this.btrpurge_planet_pops]"
			if = {
				limit = {
					any_owned_pop = {
						is_being_purged = yes
						NOT = { is_same_value = fromfrom }
						has_purge_type = { country = from type = purge_normal }
					}
				}
				random_owned_pop = {
					limit = {
						is_being_purged = yes
						NOT = { is_same_value = fromfrom }
						has_purge_type = { country = from type = purge_normal }
					}
					btrpurge_normal = yes
				}
			}
			else_if = {
				limit = {
					any_owned_pop = {
						is_being_purged = yes
						NOT = { is_same_value = fromfrom }
						OR = {
							has_purge_type = { country = from type = purge_matrix }
							has_purge_type = { country = from type = purge_processing }
						}
					}
				}
				random_owned_pop = {
					limit = {
						is_being_purged = yes
						NOT = { is_same_value = fromfrom }
						OR = {
							has_purge_type = { country = from type = purge_matrix }
							has_purge_type = { country = from type = purge_processing }
						}
					}
					btrpurge_processing = yes
				}
			}
			else_if = {
				limit = {
					any_owned_pop = {
						is_being_purged = yes
						NOT = { is_same_value = fromfrom }
						has_purge_type = { country = from type = purge_labor_camps }
					}
				}
				random_owned_pop = {
					limit = {
						is_being_purged = yes
						NOT = { is_same_value = fromfrom }
						has_purge_type = { country = from type = purge_labor_camps }
					}
					btrpurge_labor_camps = yes
				}
			}
			if = {
				limit = { exists = event_target:btrpurge_killed_pop }
				event_target:btrpurge_killed_pop = {
					root = { save_event_target_as = btrpurge_planet }
					pop_event = { id = btrpurge.3 }
					pop_event = { id = btrpurge.5 days = 0 }
				}
				# log ="kill pop; btrpurge_planet_pops = [this.btrpurge_planet_pops]"
			}
			if = {
				limit = {
					exists = event_target:refugee_pop
					event_target:refugee_pop.planet = { is_same_value = root }
				}
				event_target:refugee_pop = {
					root = { save_event_target_as = btrpurge_planet }
					pop_event = { id = btrpurge.3 }
					pop_event = { id = btrpurge.5 days = 0 }
				}
				# log ="kill pop (refugee); btrpurge_planet_pops = [this.btrpurge_planet_pops]"
			}
			change_variable = { which = btrpurge_planet_pops value = -1 }
		}
		while = {
			limit = {
				check_variable = {
					which = btrpurge_planet_purged_pops
					value > 1
				}
			}
			# log ="while; btrpurge_planet_purged_pops = [this.btrpurge_planet_purged_pops]"
			if = {
				limit = {
					any_owned_pop = {
						is_being_purged = yes
						NOT = { is_same_value = fromfrom }
						has_purge_type = { country = from type = purge_normal }
					}
				}
				if = {
					limit = {
						check_variable = {
							which = btrpurge_planet_purged_pops
							value > 2
						}
					}
					random_owned_pop = {
						limit = {
							is_being_purged = yes
							NOT = { is_same_value = fromfrom }
							has_purge_type = { country = from type = purge_normal }
						}
						btrpurge_normal = yes
					}
				}
				change_variable = { which = btrpurge_planet_purged_pops value = -1 }
			}
			else_if = {
				limit = {
					any_owned_pop = {
						is_being_purged = yes
						NOT = { is_same_value = fromfrom }
						OR = {
							has_purge_type = { country = from type = purge_matrix }
							has_purge_type = { country = from type = purge_processing }
						}
					}
				}
				if = {
					limit = {
						check_variable = {
							which = btrpurge_planet_purged_pops
							value > 2
						}
					}
					random_owned_pop = {
						limit = {
							is_being_purged = yes
							NOT = { is_same_value = fromfrom }
							OR = {
								has_purge_type = { country = from type = purge_matrix }
								has_purge_type = { country = from type = purge_processing }
							}
						}
						btrpurge_processing = yes
					}
				}
				change_variable = { which = btrpurge_planet_purged_pops value = -1 }
			}
			else_if = {
				limit = {
					any_owned_pop = {
						is_being_purged = yes
						NOT = { is_same_value = fromfrom }
						has_purge_type = { country = from type = purge_labor_camps }
					}
				}
				if = {
					limit = {
						check_variable = {
							which = btrpurge_planet_purged_pops
							value > 2
						}
					}
					random_owned_pop = {
						limit = {
							is_being_purged = yes
							NOT = { is_same_value = fromfrom }
							has_purge_type = { country = from type = purge_labor_camps }
						}
						btrpurge_labor_camps = yes
					}
				}
				change_variable = { which = btrpurge_planet_purged_pops value = -1 }
			}
			else_if = {
				limit = {
					any_owned_pop = {
						is_being_purged = yes
						NOT = { is_same_value = fromfrom }
						has_purge_type = { country = from type = purge_displacement }
					}
				}
				random_owned_pop = {
					limit = {
						is_being_purged = yes
						NOT = { is_same_value = fromfrom }
						has_purge_type = { country = from type = purge_displacement }
					}
					btrpurge_displacement = yes
				}
			}
			else_if = {
				limit = {
					any_owned_pop = {
						is_being_purged = yes
						NOT = { is_same_value = fromfrom }
						has_purge_type = { country = from type = purge_neutering }
					}
				}
				random_owned_pop = {
					limit = {
						is_being_purged = yes
						NOT = { is_same_value = fromfrom }
						has_purge_type = { country = from type = purge_neutering }
					}
					btrpurge_neutering = yes
				}
			}
			if = {
				limit = {
					exists = event_target:btrpurge_killed_pop
				}
				event_target:btrpurge_killed_pop = {
					root = { save_event_target_as = btrpurge_planet }
					pop_event = { id = btrpurge.3 }
					pop_event = { id = btrpurge.5 days = 0 }
				}
				# log ="kill pop; btrpurge_planet_purged_pops = [this.btrpurge_planet_purged_pops]"
			}
			if = {
				limit = {
					exists = event_target:refugee_pop
					event_target:refugee_pop.planet = { is_same_value = root }
				}
				event_target:refugee_pop = {
					root = { save_event_target_as = btrpurge_planet }
					pop_event = { id = btrpurge.3 }
					pop_event = { id = btrpurge.5 days = 0 }
				}
				# log ="kill pop (refugee); btrpurge_planet_purged_pops = [this.btrpurge_planet_purged_pops]"
			}
			change_variable = { which = btrpurge_planet_purged_pops value = -1 }
		}
	}
}

pop_event = {
	id = btrpurge.3

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		owner = { country_event = { id = btrpurge.4 } }
	}
}

country_event = {
	id = btrpurge.4

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		event_target:btrpurge_planet = {
			planet_event = { id = crisis.202 }
			planet_event = { id = crisis.2044 }
			planet_event = { id = action.21 }
			planet_event = { id = utopia.180 }
			planet_event = { id = utopia.181 }
			planet_event = { id = syndaw.1330 }
			planet_event = { id = ancrel.4075 }
		}
	}
}

pop_event = {
	id = btrpurge.5

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		kill_pop = yes
	}
}

country_event = {
	id = btrpurge.6

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = {
				fromfrom = { has_modifier = btrpurge_crisis_purge }
				NOR = {
					is_country_type = swarm
					is_country_type = extradimensional
					is_country_type = extradimensional_2
					is_country_type = extradimensional_3
					is_country_type = ai_empire
				}
			}
			fromfrom = { remove_modifier = btrpurge_crisis_purge }
		}
		else_if = {
			limit = {
				fromfrom = { NOT = { has_modifier = btrpurge_crisis_purge } }
				OR = {
					is_country_type = swarm
					is_country_type = extradimensional
					is_country_type = extradimensional_2
					is_country_type = extradimensional_3
					is_country_type = ai_empire
				}
			}
			fromfrom = { add_modifier = { modifier = btrpurge_crisis_purge } }
		}
	}
}

ship_event = {
	id = btrpurge.100

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		ship_event = { id = btrpurge.1 }
	}
}

country_event = {
	id = btrpurge.101

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		country_event = { id = btrpurge.1 }
	}
}

planet_event = {
	id = btrpurge.102

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		owner = { country_event = { id = btrpurge.6 } }
	}
}
